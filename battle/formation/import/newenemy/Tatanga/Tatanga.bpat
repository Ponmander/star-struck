% Define Tatanga Parts
#define .Part:Tatanga 1
#define .Part:BiffBullet 2
#define .Part:ShotMoon1 3
#define .Part:ShotMoon2 4
#define .Part:ShotBall 5
#define .Part:ShotFirework 6
#define .Part:ShotStar1 7
#define .Part:ShotStar2 8
#define .Part:ShotStar3 9
#define .Part:ShotStar4 A
#define .Part:ShotStar5 B

% Tatanga Actor Variables
#define .AVar:TurnCounterTatanga 0

#new:Actor $Tatanga
{
% stats
[Index]        D4b
[Level]        0`b
[MaxHP]        40`b
[Coins]         0`b
[Flags]       00000200
[StatusTable] $StatusTable_Tatanga
% ai
[PartsCount]   11`s
[PartsTable] $PartsTable_Tatanga
[Script]      $Script_Init_Tatanga
% move effectiveness
[Escape]        0`b % no escape
[Item]          0`b
[AirLift]       0`b
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b
[PowerBounce]   8`b
[SpinSmash]     4`b % weight (0-4)
% ui positions
[Size]        72`b 80`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b 20`b % dx dy (usually top left)
[StatusIcon]   10`b 20`b % dx dy (usually top right)
}

#new:StatusTable $StatusTable_Tatanga
{
.Status:Normal    0`
.Status:Default   0`
.Status:Sleep     0`
.Status:Poison    0`
.Status:Frozen    0`
.Status:Dizzy     0`
.Status:Fear      0`
.Status:Static    0`
.Status:Paralyze  0`
.Status:Shrink    0`
.Status:Stop      0`
.Status:SleepTurnMod      0`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod      0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod   0`
.Status:ShrinkTurnMod     0`
.Status:StopTurnMod       0`
.Status:End
}

#new:IdleAnimations $IdleAnimations_Tatanga
{
.Status:Normal    .Anim:Tatanga_Idle
.Status:Stone     .Anim:Tatanga_Still
.Status:Sleep     .Anim:Tatanga_Still
.Status:Poison    .Anim:Tatanga_Idle
.Status:Stop      .Anim:Tatanga_Still
.Status:Static    .Anim:Tatanga_Idle
.Status:Paralyze  .Anim:Tatanga_Still
.Status:Dizzy     .Anim:Tatanga_Dizzy
.Status:End
}

#new:IdleAnimations $IdleAnimations_BiffBullet
{
.Status:Normal    .Anim:Tatanga_ShotBiff
.Status:End
}

#new:IdleAnimations $IdleAnimations_ShotMoon
{
.Status:Normal    .Anim:Tatanga_ShotMoon
.Status:End
}

#new:IdleAnimations $IdleAnimations_ShotBall
{
.Status:Normal    .Anim:Tatanga_ShotBall
.Status:End
}

#new:IdleAnimations $IdleAnimations_ShotFirework
{
.Status:Normal    .Anim:Tatanga_ShotFireworks
.Status:End
}

#new:IdleAnimations $IdleAnimations_ShotStar
{
.Status:Normal    .Anim:Tatanga_ShotBall
.Status:End
}

#new:DefenseTable $DefenseTable_Tatanga
{
.Element:Normal 0`
.Element:End
}

#new:PartsTable $PartsTable_Tatanga % ActorPartBlueprint struct in decomp
{
    /% s32 flags %/                 00800000
    /% s8 index %/                  ~Byte:.Part:Tatanga
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        -10`b 50`b % For cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_Tatanga
    /% s32* defenseTable %/         $DefenseTable_Tatanga
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 F6b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

	/% Biff Bullet %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:BiffBullet
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 0`b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_BiffBullet
    /% s32* defenseTable %/         00000000
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

	/% Shot Moon 1 %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:ShotMoon1
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 0`b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_ShotMoon
    /% s32* defenseTable %/         00000000
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

	/% Shot Moon 2 %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:ShotMoon2
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 0`b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_ShotMoon
    /% s32* defenseTable %/         00000000
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

	/% Shot Ball %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:ShotBall
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 0`b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_ShotBall
    /% s32* defenseTable %/         00000000
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

	/% Shot Firework %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:ShotFirework
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 0`b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_ShotFirework
    /% s32* defenseTable %/         00000000
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

	/% Shot Star 1 %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:ShotStar1
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 0`b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_ShotStar
    /% s32* defenseTable %/         00000000
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

	/% Shot Star 2 %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:ShotStar2
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 0`b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_ShotStar
    /% s32* defenseTable %/         00000000
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

	/% Shot Star 3 %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:ShotStar3
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 0`b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_ShotStar
    /% s32* defenseTable %/         00000000
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

	/% Shot Star 4 %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:ShotStar4
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 0`b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_ShotStar
    /% s32* defenseTable %/         00000000
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

	/% Shot Star 4 %/
    /% s32 flags %/                 00120001
    /% s8 index %/                  ~Byte:.Part:ShotStar5
    /% Vec3b posOffset %/           0`b 0`b 0`b
    /% Vec2b targetOffset %/        0`b 0`b %for cursor when selecting to attack in battle
    /% s16 opacity %/               00FFs
    /% s32* IdleAnimations %/       $IdleAnimations_ShotStar
    /% s32* defenseTable %/         00000000
    /% s32 eventFlags %/            00000000
    /% s32 elementImmunityFlags %/  00000000
    /% s8 unk_1C %/                 00b
    /% s8 unk_1D %/                 00b
    /% s8 unk_1E %/                 00b
    /% s8 unk_1F %/                 00b
    /% s8 unk_20 %/                 00000000

}

#new:Script $Script_Init_Tatanga
{
	Call  BindTakeTurn	( .Actor:Self $Script_TakeTurn_Tatanga )
	Call  BindIdle	( .Actor:Self $Script_Idle_Tatanga )
	Call  BindHandleEvent  ( .Actor:Self $Script_HandleEvent_Tatanga )
	Call  SetActorVar   ( .Actor:Self .AVar:TurnCounterTatanga 0` )
	% Maze Star 1
	Call  CreateNpc     ( 1` .Anim:MazeStar_75_Idle )
	Call  SetNpcYaw     ( 1` 0` )
	Call  SetNpcPos     ( 1` -148` 62` -238` )
	Call  EnableNpcShadow  ( 1` .True )
	% Maze Star 2
	Call  CreateNpc     ( 2` .Anim:MazeStar_50_Move )
	Call  SetNpcYaw     ( 2` 0` )
	Call  SetNpcPos     ( 2` -111` 120` -141` )
	Call  EnableNpcShadow  ( 2` .True )
	% Maze Star 3
	Call  CreateNpc     ( 3` .Anim:MazeStar_100_Move )
	Call  SetNpcYaw     ( 3` 0` )
	Call  SetNpcPos     ( 3` -70` 75` -266` )
	Call  EnableNpcShadow  ( 3` .True )
	% Maze Star 4
	Call  CreateNpc     ( 4` .Anim:MazeStar_50_Move )
	Call  SetNpcYaw     ( 4` 0` )
	Call  SetNpcPos     ( 4` -33` 29` -209` )
	Call  EnableNpcShadow  ( 4` .True )
	% Maze Star 5
	Call  CreateNpc     ( 5` .Anim:MazeStar_75_Idle )
	Call  SetNpcYaw     ( 5` 0` )
	Call  SetNpcPos     ( 5` 2` 108` -285` )
	Call  EnableNpcShadow  ( 5` .True )
	% Maze Star 6
	Call  CreateNpc     ( 6` .Anim:MazeStar_50_Move )
	Call  SetNpcYaw     ( 6` 0` )
	Call  SetNpcPos     ( 6` 58` 89` -249` )
	Call  EnableNpcShadow  ( 6` .True )
	% Maze Star 7
	Call  CreateNpc     ( 7` .Anim:MazeStar_75_Idle )
	Call  SetNpcYaw     ( 7` 0` )
	Call  SetNpcPos     ( 7` 128` 123` -204` )
	Call  EnableNpcShadow  ( 7` .True )
	% Maze Star 8
	Call  CreateNpc     ( 8` .Anim:MazeStar_50_Move )
	Call  SetNpcYaw     ( 8` 0` )
	Call  SetNpcPos     ( 8` 142` 63` -182` )
	Call  EnableNpcShadow  ( 8` .True )

	%Call $ScrAPI_createActorWrapper2 ( 0 ) %index into $fakeFormation to load
	%Call SetActorFlagBits ( .Actor:Self 1 .False  ) %turn invisible flag off
	%Call SetActorFlagBits ( .Actor:Self 00444004 .False  )
	%Call SetPartFlagBits ( .Actor:Self 1 80000000 .False )
	Return
	End
}


#new:Script $Script_Idle_Tatanga % Doesn't have animation directives - safe to use
{
    Label  5
    Call  GetStatusFlags    ( .Actor:Self *VarA )
    If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
        Wait  1`
        Goto  5
    EndIf
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var1  2`
    Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
    If  *Var4  >=  *Var1
        Goto  B
    EndIf
    Wait  9`
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.5] )
    Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  IdleFlyToGoal     ( .Actor:Self 0` 0` .Easing:SinOut )
    Label  B
    Call  GetStatusFlags    ( .Actor:Self *VarA )
    If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
        Wait  1`
        Goto  5
    EndIf
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var1  4`
    Call  GetActorPos       ( .Actor:Self *Var3 *Var4 *Var5 )
    If  *Var4  >=  *Var1
        Goto  C
    EndIf
    Wait  9`
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[1.0] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.5] )
    Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  IdleFlyToGoal     ( .Actor:Self 0` 0` .Easing:SinOut )
    Wait  3`
    Label  C
    Call  GetStatusFlags    ( .Actor:Self *VarA )
    If  *VarA  &  ~Flags:StatusFlags:Sleep|Paralyze|Dizzy|Stone|Stop % 351000
        Wait  1`
        Goto  5
    EndIf
    Call  SetIdleGoalToHome ( .Actor:Self )
    Call  GetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Add   *Var1  2`
    Call  SetActorIdleJumpGravity   ( .Actor:Self *Fixed[0.8] )
    Call  SetActorIdleSpeed ( .Actor:Self *Fixed[0.3] )
    Call  SetIdleGoal       ( .Actor:Self *Var0 *Var1 *Var2 )
    Call  IdleFlyToGoal     ( .Actor:Self 0` 1` .Easing:SinOut )
    Wait  1`
    Goto  5
    Return
    End
}

#new:Script $Script_HandleEvent_Tatanga
{
	Call     UseIdleAnimation 	( .Actor:Self .False )
	Call     EnableIdleScript 	( .Actor:Self .False )
	Call     GetLastEvent 	( .Actor:Self *Var0 )
	Switch  *Var0
		CaseOR  ==  .Event:HitCombo
		CaseOR  ==  .Event:Hit
			SetConst  *Var0  .Part:Tatanga
			SetConst  *Var1  .Anim:Tatanga_Pain
			ExecWait DoNormalHit
		EndCaseGroup
		Case  ==  .Event:BurnHit
			SetConst  *Var0  .Part:Tatanga
			SetConst  *Var1  .Anim:Tatanga_Pain
			ExecWait DoImmune
		Case  ==  .Event:BurnDeath
			SetConst  *Var0  .Part:Tatanga
			SetConst  *Var1  .Anim:Tatanga_Pain
			SetConst  *Var2  .Anim:Tatanga_Pain  % Change to Death Animation
			ExecWait DoBurnHit
			SetConst  *Var0  .Part:Tatanga
			SetConst  *Var1  .Anim:Tatanga_Pain  % Change to Death Animation
			ExecWait DoDeath
			Return
		Case  ==  .Event:ShockHit
			Call     PlaySoundAtActor 	( .Actor:Self 00000759 )
			SetConst  *Var0  .Part:Tatanga
			SetConst  *Var1  .Anim:Tatanga_Pain
			ExecWait DoShockHit
			SetConst  *Var0  .Part:Tatanga
			SetConst  *Var1  .Anim:Tatanga_Pain
			ExecWait 8029BD70
		Case  ==  .Event:ShockDeath
			Call     PlaySoundAtActor 	( .Actor:Self 00000759 )
			SetConst  *Var0  .Part:Tatanga
			SetConst  *Var1  .Anim:Tatanga_Pain
			ExecWait DoShockHit
			SetConst  *Var0  .Part:Tatanga
			SetConst  *Var1  .Anim:Tatanga_Pain
			ExecWait DoDeath
			Return
		CaseOR  ==  00000017
		CaseOR  ==  .Event:Immune
		CaseOR  ==  .Event:AirLiftFailed
		EndCaseGroup
		Case  ==  .Event:Death
			SetConst  *Var0  .Part:Tatanga
			SetConst  *Var1  .Anim:Tatanga_Pain
			ExecWait DoNormalHit
			SetConst  *Var0  .Part:Tatanga
			SetConst  *Var1  .Anim:Tatanga_Pain
			ExecWait DoDeath
			Return
		Case  ==  .Event:RecoverStatus
			SetConst  *Var0  .Part:Tatanga
			SetConst  *Var1  .Anim:Tatanga_Idle
			ExecWait DoRecover
		Default
	EndSwitch
	Call     EnableIdleScript 	( .Actor:Self .True )
	Call     UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_TakeTurn_Tatanga
{
	Call  EnableIdleScript 	( .Actor:Self .False )
	Call  UseIdleAnimation 	( .Actor:Self .False )
    Label CheckPhase
        Call GetActorHP ( .Actor:Self *Var3 )
        If *Var3 < 21`
            Goto SecondPhase
        Else
            Goto FirstPhase
        EndIf
	Label FirstPhase
		Call RandInt (100` *Var1) % Get Combo to use
		Switch *Var1
			Case < 40` % 40% Chance
				Set *Var0 0` % Combo 1: (Front Shot + Front Shot)
			Case < 70` % 30% Chance
				Set *Var0 1` % Combo 2: (Front Shot + Bottom Shot)
			Case < 90` % 20% Chance
				Set *Var0 2` % Combo 3: (Bottom Shot + Front Shot)
			Case < 100` % 10% Chance
				Set *Var0 3` % Combo 4: (Bottom Shot + Bottom Shot)
		EndSwitch
		Label FirstPhaseAttacks
		Set  *Var0 3` % Always use the same attack, testing purposes.
		% Which Attack?
		Switch *Var0
			Case == 0`
				ExecWait $Combo_Both_FowardShot
				Goto EndTurn
			Case == 1`
				ExecWait $Combo_FowardShot_And_BottomShot
				Goto EndTurn
			Case == 2`
				ExecWait $Combo_BottomShot_And_FowardShot
				Goto EndTurn
			Case == 3`
				ExecWait $Combo_Both_BottomShot
				Goto EndTurn
		EndSwitch

		Goto EndTurn
	Label SecondPhase

		Goto EndTurn
	Label EndTurn
	Call  EnableIdleScript 	( .Actor:Self .True )
	Call  UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Combo_Both_FowardShot
{
	Call  EnableIdleScript 	( .Actor:Self .False )
	Call  UseIdleAnimation 	( .Actor:Self .False )
	Call RandInt (100` *Var1) % Get Combo to use
	Switch *Var1
		Case < 0` % 25% Chance
			Set *Var0 0` % Combo 1: (Biff Bullet + Biff Bullet)
		Case < 0` % 25% Chance
			Set *Var0 1` % Combo 2: (Biff Bullet + Moon Shot)
		Case < 0` % 25% Chance
			Set *Var0 2` % Combo 3: (Moon Shot + Biff Bullet)
		Case < 0` % 25% Chance
			Set *Var0 3` % Combo 4: (Moon Shot + Moon Shot)
	EndSwitch
	Set  *Var0 3` % Always use the same attack, testing purposes.
	% Which Attack?
	Switch *Var0
		Case == 0`
			ExecWait $Attack_ForwardShot_BulletBiff
			Wait 45`
			ExecWait $Attack_ForwardShot_BulletBiff
			Goto EndTurn
		Case == 1`
			ExecWait $Attack_ForwardShot_BulletBiff
			Wait 45`
			ExecWait $Attack_ForwardShot_MoonShot
			Goto EndTurn
		Case == 2`
			ExecWait $Attack_ForwardShot_MoonShot
			Wait 45`
			ExecWait $Attack_ForwardShot_BulletBiff
			Goto EndTurn
		Case == 3`
			ExecWait $Attack_ForwardShot_MoonShot
			Wait 45`
			ExecWait $Attack_ForwardShot_MoonShot
			Goto EndTurn
	EndSwitch
	Label EndTurn
	Call  EnableIdleScript 	( .Actor:Self .True )
	Call  UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Combo_FowardShot_And_BottomShot
{
  Call  EnableIdleScript 	( .Actor:Self .False )
	Call  UseIdleAnimation 	( .Actor:Self .False )
	Call RandInt (100` *Var1) % Get Combo to use
	Switch *Var1
		Case < 0` % 25% Chance
			Set *Var0 0` % Combo 1: (Biff Bullet + Biff Bullet)
		Case < 0` % 25% Chance
			Set *Var0 1` % Combo 2: (Biff Bullet + Moon Shot)
		Case < 0` % 25% Chance
			Set *Var0 2` % Combo 3: (Moon Shot + Biff Bullet)
		Case < 0` % 25% Chance
			Set *Var0 3` % Combo 4: (Moon Shot + Moon Shot)
	EndSwitch
	Set  *Var0 0` % Always use the same attack, testing purposes.
	% Which Attack?
	Switch *Var0
		Case == 0`
			ExecWait $Attack_ForwardShot_BulletBiff
			Wait 45`
			ExecWait $Attack_ForwardShot_BulletBiff
			Goto EndTurn
		Case == 1`
			ExecWait $Attack_ForwardShot_BulletBiff
			Wait 45`
			ExecWait $Attack_ForwardShot_MoonShot
			Goto EndTurn
		Case == 2`
			ExecWait $Attack_ForwardShot_MoonShot
			Wait 45`
			ExecWait $Attack_ForwardShot_BulletBiff
			Goto EndTurn
		Case == 3`
			ExecWait $Attack_ForwardShot_MoonShot
			Wait 45`
			ExecWait $Attack_ForwardShot_MoonShot
			Goto EndTurn
	EndSwitch
	Label EndTurn
	Call  EnableIdleScript 	( .Actor:Self .True )
	Call  UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Combo_BottomShot_And_FowardShot
{
  Call  EnableIdleScript 	( .Actor:Self .False )
	Call  UseIdleAnimation 	( .Actor:Self .False )
	Call RandInt (100` *Var1) % Get Combo to use
	Switch *Var1
		Case < 0` % 25% Chance
			Set *Var0 0` % Combo 1: (Biff Bullet + Biff Bullet)
		Case < 0` % 25% Chance
			Set *Var0 1` % Combo 2: (Biff Bullet + Moon Shot)
		Case < 0` % 25% Chance
			Set *Var0 2` % Combo 3: (Moon Shot + Biff Bullet)
		Case < 0` % 25% Chance
			Set *Var0 3` % Combo 4: (Moon Shot + Moon Shot)
	EndSwitch
	Set  *Var0 0` % Always use the same attack, testing purposes.
	% Which Attack?
	Switch *Var0
		Case == 0`
			ExecWait $Attack_ForwardShot_BulletBiff
			Wait 45`
			ExecWait $Attack_ForwardShot_BulletBiff
			Goto EndTurn
		Case == 1`
			ExecWait $Attack_ForwardShot_BulletBiff
			Wait 45`
			ExecWait $Attack_ForwardShot_MoonShot
			Goto EndTurn
		Case == 2`
			ExecWait $Attack_ForwardShot_MoonShot
			Wait 45`
			ExecWait $Attack_ForwardShot_BulletBiff
			Goto EndTurn
		Case == 3`
			ExecWait $Attack_ForwardShot_MoonShot
			Wait 45`
			ExecWait $Attack_ForwardShot_MoonShot
			Goto EndTurn
	EndSwitch
	Label EndTurn
	Call  EnableIdleScript 	( .Actor:Self .True )
	Call  UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Combo_Both_BottomShot
{
  Call  EnableIdleScript 	( .Actor:Self .False )
	Call  UseIdleAnimation 	( .Actor:Self .False )
	Call RandInt (100` *Var1) % Get Combo to use
	Switch *Var1
		Case < 0` % 25% Chance
			Set *Var0 0` % Combo 1: (Star Fireworks)
		Case < 0` % 25% Chance
			Set *Var0 1` % Combo 2: (Chikako)
	EndSwitch
	Set  *Var0 0` % Always use the same attack, testing purposes.
	% Which Attack?
	Switch *Var0
		Case == 0`
			ExecWait $Attack_BottomShot_StarFireworks
			Goto EndTurn
		Case == 1`
			ExecWait $Summon_BottomShot_Chikako
			Goto EndTurn
	EndSwitch
	Label EndTurn
	Call  EnableIdleScript 	( .Actor:Self .True )
	Call  UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Attack_ForwardShot_BulletBiff
{
  	Call  EnableIdleScript 	( .Actor:Self .False )
	Call  UseIdleAnimation 	( .Actor:Self .False )
	Call  SetTargetActor   ( .Actor:Self .Actor:Player )
	Call  SetGoalToTarget ( .Actor:Self )
	% Animation here
  	Call  SetAnimation ( .Actor:Self .Part:Tatanga .Anim:Tatanga_ShotForwardStart )
	Wait  10`
	Call  PlaySoundAtActor  ( .Actor:Self 000002C8 )
  	Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  	Add  *Var0 -30`
  	Add  *Var1 20`
  	Add  *Var2 2`
  	Call  PlayEffect    ( ~FX:FaintDustCloud *Var0 *Var1 *Var2 *Fixed[1.5] 30` 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  	Wait  2`
	Call  SetAnimation ( .Actor:Self .Part:BiffBullet .Anim:Tatanga_ShotBiff )
	Wait  4`
	Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Add *Var0 -5`
	Call  SetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
  	Add  *Var0 -30`
  	Add  *Var1 10`
  	Add  *Var2 2`
  	Call  SetPartPos        ( .Actor:Self .Part:BiffBullet  *Var0  *Var1  *Var2 )
	Call  SetPartScale  ( .Actor:Self .Part:BiffBullet *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Add *Var0 5`
	Call  SetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Call  EnemyTestTarget ( .Actor:Self *Var0 0 0 0 0 )
	Switch  *Var0
		CaseOR  ==  .HitResult:Miss
		CaseOR  ==  .HitResult:Lucky
			Call  SetPartFlagBits   ( .Actor:Self .Part:BiffBullet 00000001 .False )
			Call  GetGoalPos  	( .Actor:Self *Var0 *Var1 *Var2 )
			Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
			Call  SetPartMoveSpeed ( .Actor:Self .Part:BiffBullet *Fixed[13.0] )
    		Call  FlyPartTo ( .Actor:Self .Part:BiffBullet *Var0 *Var1 *Var2 0` 0` .Easing:CubicIn )
			ExecWait  $Script_Biff_Explode
			Call  SetGoalToTarget	( .Actor:Self )
			If *Var0 == .HitResult:Lucky
				Call	EnemyTestTarget  ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
			EndIf
			Goto  ReturnHome
	EndSwitch
	% Damage Mario
	Call  SetPartFlagBits   ( .Actor:Self .Part:BiffBullet 00000001 .False )
	Call  GetGoalPos  ( .Actor:Self *Var0 *Var1 *Var2 )
	Add	  *Var1 -10`
  	Call  SetGoalPos  ( .Actor:Self *Var0 *Var1 *Var2 )
	Call  SetPartMoveSpeed ( .Actor:Self .Part:BiffBullet *Fixed[13.0] )
  	Call  FlyPartTo ( .Actor:Self .Part:BiffBullet *Var0 *Var1 *Var2 0` 0` .Easing:CubicIn )
  	Call  SetGoalToTarget ( .Actor:Self )
  	Wait  2`
	Call  EnemyDamageTarget 	( .Actor:Self *Var0 ~Flags:DamageType:Blast 0000FFFF 00000000 3` 00000020 ) % 3 Damage
	ExecWait  $Script_Biff_Explode
	% Return home
	Label  ReturnHome
	Call  SetAnimation ( .Actor:Self .Part:Tatanga .Anim:Tatanga_ShotForwardEnd )
	Wait  10`
	Call  EnableIdleScript 	( .Actor:Self .True )
	Call  UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Script_Biff_Explode
{
  Call  GetPartPos   ( .Actor:Self .Part:BiffBullet *Var0 *Var1 *Var2 )
  Add  *Var2  2`
  Call  PlayEffect    ( ~FX:SmokeRing:Blast1 *Var0 *Var1 *Var2 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  Add  *Var1  10`
  Add  *Var2  2`
  Call  PlayEffect    ( ~FX:FaintDustCloud *Var0 *Var1 *Var2 *Fixed[1.5] 30` 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  Call  PlaySoundAtPart ( .Actor:Self .Part:BiffBullet 00002078 )
  Call  StartRumble   ( 0000000B )
  Thread
    Call  ShakeCam  ( .Cam:Battle 00000000  5` *Fixed[1.0] )
  EndThread
  Call  SetPartFlagBits   ( .Actor:Self .Part:BiffBullet 00000001 .True )
  Return
  End
}

#new:Script $Attack_ForwardShot_MoonShot
{
  	Call  EnableIdleScript 	( .Actor:Self .False )
	Call  UseIdleAnimation 	( .Actor:Self .False )
	Call  SetTargetActor   ( .Actor:Self .Actor:Player )
	Call  SetGoalToTarget ( .Actor:Self )
	% Animation here
	Call  EnemyTestTarget ( .Actor:Self *Var0 0 0 0 0 )
	Switch  *Var0
		CaseOR  ==  .HitResult:Miss
		CaseOR  ==  .HitResult:Lucky
			If *Var0 == .HitResult:Lucky
				Call  SetGoalToTarget	( .Actor:Self )
				Call  EnemyTestTarget  ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
			EndIf
			Goto  ReturnHome
	EndSwitch
	% Damage Mario
	Set *Var0 3
	Loop 2`
		Exec $ShotMoon_Hit
		Wait 8`
		Add *Var0 1
	EndLoop
	Call  GetDistanceToGoal ( .Actor:Self *Var0 )
	DivF *Var0 *Fixed[8.0]
	Add  *Var0 1
	Wait *Var0
	Wait  2`
	Call  EnemyDamageTarget 	( .Actor:Self *Var0 ~Flags:DamageType:NoContact 0000FFFF 00000000 3` 00000020 ) % 3 Damage
	Wait  8`
	Call  EnemyDamageTarget 	( .Actor:Self *Var0 ~Flags:DamageType:NoContact 0000FFFF 00000000 3` 00000020 ) % 3 Damage
	% Return home
	Label  ReturnHome
	Call  EnableIdleScript 	( .Actor:Self .True )
	Call  UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $ShotMoon_Hit
{
	Call  SetAnimationRate  ( .Actor:Self .Part:Tatanga *Fixed[2.0] )
	Call  SetAnimation ( .Actor:Self .Part:Tatanga .Anim:Tatanga_ShotForwardStart )
	Wait  10`
	Call  PlaySoundAtActor  ( .Actor:Self 000002C8 )
  	Call  GetActorPos   ( .Actor:Self *Var1 *Var2 *Var3 )
  	Add  *Var1 0`
  	Add  *Var2 20`
  	Add  *Var3 2`
  	Call  PlayEffect    ( ~FX:FaintDustCloud *Var1 *Var2 *Var3 *Fixed[1.5] 30` 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  	Wait  2`
	Call  SetAnimation ( .Actor:Self *Var0 .Anim:Tatanga_ShotMoon )
	Wait  4`
	Call  GetActorPos ( .Actor:Self *Var1 *Var2 *Var3 )
	Add *Var1 -5`
	Call  SetActorPos ( .Actor:Self *Var1 *Var2 *Var3 )
	Call  GetActorPos ( .Actor:Self *Var1 *Var2 *Var3 )
  	Add  *Var1 -1`
  	Add  *Var2 12`
  	Add  *Var3 2`
  	Call  SetPartPos  ( .Actor:Self *Var0  *Var1  *Var2  *Var3 )
	Call  GetActorPos ( .Actor:Self *Var1 *Var2 *Var3 )
	Add *Var1 5`
	Call  SetActorPos ( .Actor:Self *Var1 *Var2 *Var3 )
	Thread
		Call  SetPartScale  ( .Actor:Self *Var0 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
		Wait  1`
		Call  SetPartScale  ( .Actor:Self *Var0 *Fixed[0.6] *Fixed[0.6] *Fixed[0.6] )
		Wait  1`
		Call  SetPartScale  ( .Actor:Self *Var0 *Fixed[0.7] *Fixed[0.7] *Fixed[0.7] )
		Wait  1`
		Call  SetPartScale  ( .Actor:Self *Var0 *Fixed[0.8] *Fixed[0.8] *Fixed[0.8] )
		Wait  1`
		Call  SetPartScale  ( .Actor:Self *Var0 *Fixed[0.9] *Fixed[0.9] *Fixed[0.9] )
		Wait  1`
		Call  SetPartScale  ( .Actor:Self *Var0 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
	EndThread
	Call  SetPartFlagBits   ( .Actor:Self *Var0 00000001 .False )
	Call  GetGoalPos  ( .Actor:Self *Var1 *Var2 *Var3 )
	Add	  *Var2 -12`
	Call  SetGoalPos  ( .Actor:Self *Var1 *Var2 *Var3 )
  	Call  SetPartMoveSpeed ( .Actor:Self *Var0 *Fixed[9.0] )
	Call  FlyPartTo ( .Actor:Self *Var0 *Var1 *Var2 *Var3 0` 0` .Easing:Linear )
	Call  SetGoalToTarget ( .Actor:Self )
    Call  SetPartFlagBits   ( .Actor:Self *Var0 00000001 .True )
	Call  SetAnimation ( .Actor:Self .Part:Tatanga .Anim:Tatanga_ShotForwardEnd )
	Wait  10`
	Call  SetAnimation ( .Actor:Self .Part:Tatanga .Anim:Tatanga_Idle )
	Wait  10`
    Return
    End
}

#new:Script $Attack_BottomShot_StarFireworks
{
  	Call  EnableIdleScript 	( .Actor:Self .False )
	Call  UseIdleAnimation 	( .Actor:Self .False )
	Call  SetTargetActor   ( .Actor:Self .Actor:Player )
	Call  SetGoalToTarget ( .Actor:Self )

	% Tatanga Bottom Shot
	Call  SetAnimation ( .Actor:Self .Part:Tatanga .Anim:Tatanga_ShotBottom )
	Wait  30`
	Call  PlaySoundAtActor  ( .Actor:Self 000002C8 )

	% Shot Ball
	Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Call  SetPartPos ( .Actor:Self .Part:ShotBall *Var0 *Var1 *Var2 )
	Call  SetAnimation ( .Actor:Self .Part:Tatanga .Anim:Tatanga_Idle )
	Call  SetAnimation ( .Actor:Self .Part:ShotBall .Anim:Tatanga_ShotBall )
	Wait  5`
	Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Add *Var1 -24`
	Call  SetPartMoveSpeed ( .Actor:Self .Part:ShotBall *Fixed[4.0] )
	Call  SetPartFlagBits   ( .Actor:Self .Part:ShotBall 00000001 .False )
	Call  FlyPartTo ( .Actor:Self .Part:ShotBall *Var0 *Var1 *Var2 0` 0` .Easing:Linear )
	Wait  5`
	%/

	% Shot Ball Open
	Call  GetActorPos ( .Actor:Self *Var0 *Var1 *Var2 )
	Add *Var0 -80`
	Add *Var1 -24`
	Call  SetPartMoveSpeed ( .Actor:Self .Part:ShotBall *Fixed[6.0] )
	Call  FlyPartTo ( .Actor:Self .Part:ShotBall *Var0 *Var1 *Var2 0` 0` .Easing:Linear )
	Call  SetAnimation ( .Actor:Self .Part:ShotBall .Anim:Tatanga_ShotBallOpen )
	Wait  5`
	%/

	% Firework
	Call  GetPartPos ( .Actor:Self .Part:ShotBall *Var0 *Var1 *Var2 )
	Call  SetPartPos ( .Actor:Self .Part:ShotFirework *Var0 *Var1 *Var2 )
	Call  SetAnimation ( .Actor:Self .Part:ShotFirework .Anim:Tatanga_ShotFireworks )
	Wait  5`
	Call  GetPartPos ( .Actor:Self .Part:ShotBall *Var0 *Var1 *Var2 )
	Add *Var1 60`
	Call  SetPartMoveSpeed ( .Actor:Self .Part:ShotFirework *Fixed[6.0] )
	Call  SetPartFlagBits   ( .Actor:Self .Part:ShotFirework 00000001 .False )
	Call  FlyPartTo ( .Actor:Self .Part:ShotFirework *Var0 *Var1 *Var2 0` 0` .Easing:CubicIn )
	Call  SetPartFlagBits   ( .Actor:Self .Part:ShotBall 00000001 .True )
	%/

	Wait  5`
	Call  EnemyTestTarget ( .Actor:Self *Var0 0 0 0 0 )
	Switch  *Var0
		CaseOR  ==  .HitResult:Miss
		CaseOR  ==  .HitResult:Lucky
			If *Var0 == .HitResult:Lucky

				Call  SetGoalToTarget	( .Actor:Self )
				Call  EnemyTestTarget  ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
			EndIf
			Goto  ReturnHome
	EndSwitch

	% Shot Star 1
	Call  SetAnimation ( .Actor:Self .Part:ShotStar1 .Anim:Tatanga_ShotStarExplosion )
	Call  GetPartPos ( .Actor:Self .Part:ShotFirework *Var0 *Var1 *Var2 )
	Add *Var1 25`
	Call  SetPartPos ( .Actor:Self .Part:ShotStar1 *Var0 *Var1 *Var2 )
	Call  SetPartFlagBits   ( .Actor:Self .Part:ShotStar1 00000001 .False )
	Wait  10`
	%/

	/% Shot Star 2
	Call  SetPartFlagBits   ( .Actor:Self .Part:ShotStar2 00000001 .False )
	Call  SetAnimation ( .Actor:Self .Part:ShotStar2 .Anim:Tatanga_ShotStarExplosion )
	Call  GetPartPos ( .Actor:Self .Part:ShotStar1 *Var0 *Var1 *Var2 )
	Add *Var0 10`
	Sub *Var1 5`
	Call  SetPartPos ( .Actor:Self .Part:ShotStar2 *Var0 *Var1 *Var2 )
	%/

	/% Shot Star 3
	Call  SetPartFlagBits   ( .Actor:Self .Part:ShotStar3 00000001 .False )
	Call  SetAnimation ( .Actor:Self .Part:ShotStar3 .Anim:Tatanga_ShotStarExplosion )
	Call  GetPartPos ( .Actor:Self .Part:ShotStar1 *Var0 *Var1 *Var2 )
	Sub *Var0 10`
	Sub *Var1 5`
	Call  SetPartPos ( .Actor:Self .Part:ShotStar3 *Var0 *Var1 *Var2 )
	%/

	% Damage Mario
	Call  SetTargetActor    ( .Actor:Self .Actor:Player )
	Call  SetGoalToTarget   ( .Actor:Self )
	Call  SetPartFlagBits   ( .Actor:Self .Part:ShotFirework 00000001 .True )
	Wait  10`
	Call  SetPartFlagBits   ( .Actor:Self .Part:ShotStar1 00000001 .True )
	Wait  2`
	Call  EnemyDamageTarget 	( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Blast 0000FFFF 00000000 6` 00000020 ) % 6 Damage

	/%
	Set *VarA 0`
	If *VarE != ~Flags:StatusFlags:Shrink % 80000
		Call  GetBattleFlags ( *Var0 )
		If *Var0 != 80000000
			Call  GetStatusFlags    ( .Actor:Player *Var0 )
			If  *Var0  !&  ~Flags:StatusFlags:Stone % 100000
				Set *VarA  1`
			EndIf
		EndIf
	EndIf
	If *VarA != 0`
		Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
		Call  SetGoalToTarget   ( .Actor:Self )
		% Damage Partner
		% Call  SetPartFlagBits   ( .Actor:Self .Part:ShotStar2 00000001 .True )
		Wait  2`
		Call  EnemyDamageTarget 	( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Blast 0000FFFF 00000000 6` 00000020 ) % 6 Damage
	EndIf
	%/

	% Call  SetPartFlagBits   ( .Actor:Self .Part:ShotStar3 00000001 .True )
	% Return home
	Label  ReturnHome
  	Call  EnableIdleScript 	( .Actor:Self .True )
	Call  UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}

#new:Script $Summon_BottomShot_Chikako
{
  	Call  EnableIdleScript 	( .Actor:Self .False )
	Call  UseIdleAnimation 	( .Actor:Self .False )

  	Call  EnableIdleScript 	( .Actor:Self .True )
	Call  UseIdleAnimation 	( .Actor:Self .True )
	Return
	End
}
